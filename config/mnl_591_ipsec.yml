---
####################################
# EXAMPLE FILE FOR ALL IN ONE KOLLA #
#####################################

###############################################################
#  !!!WARNING!!!: DO NOT USE WITGUT EDITING FIRST             #
#  It's recommended to copy this config to user/ subdirectory #
###############################################################


## KOLLA IMAGES
# Directory where the disk images will be located
# default is the libvirt image pool
# make sure you have enough disk space on the partition
# if not then change to something on your /home
image_pool: "/home/ogar/prj/dnation/kolla/data/libvirt_images"

# Path to the base node image
image_path: "{{ image_pool }}/kolla-image.qcow2"


## REMOTE HOST
# If you are running libvirt on remote host
is_remote: false
# Image pool on remote host
remote_image_pool: "/var/lib/libvirt/images"

# SSH key for the remote host
proxy_server_private_key: "{{ lookup('ansible.builtin.env', 'HOME') }}/.ssh/id_rsa"


## NETWORK
# 192.168.122.0/24
# could also be the "default" network that libvirt created
network_ssh: "nat1"

# 192.168.123.0/24
network_openstack: "nat2"

# 192.168.100.0/24
network_neutron: "nat3"


## GIT PATCH
# Kolla builder can rebase git branches
# Usefull if you have a patch that's  divided into more branches
# Apply git patches
git_patch_kolla: false

# The branch to apply patches to
git_branch: "master"

# The patches applyied using git rebase
git_patches: []


## SSH
# Absolute path to the ssh key
# Either copy key from ssh/id_kolla to your .ssh directory
# or modify this config to point to ssh/id_kolla
kolla_ssh_key: "{{ lookup('ansible.builtin.env', 'HOME') }}/.ssh/id_kolla"

# Add nodes to your ssh config
# this way you can easily ssh into nodes by
# ssh -F <ssh_config> <node-name>
# You can change this to .ssh/config for simpler deployment
ssh_config: "ssh_config"

## ARA RECORDING
# ARA records ansible tool can be deployed to track all ansible
# runs on the host and nodes in one UI accessible on the host
# (local or remote)
ara_enable: true
ara_server_port: 8000

## KOLLA CONFIGURATION
# globals file (located in kolla-files) subdirectory
# this is usefull if you have several deployment scenarios
# i.e. you develop on multiple branches at once
globals_file: globals.yml

# Path to kolla-ansible source code
kolla_source_local_path: "../kolla-ansible-scs"


## ADDITIONAL UPLOADS
## Additional Uploads, such as mounted source codes
## This is an experimental feature, works only for aio deployment for now

# Additional uploads path on nodes
additional_upload_node_path: "/home/kolla"

# Mode (recommended to be 0777 if you plan to mount it to containers using `default_extra_mounts`)
additional_upload_mode: "0777"

# List of additional directories to upload
additional_uploads: []

# Additional directiories to be uploaded to deploy node only
# NOTE: This has effect only in multinode setup
additional_uploads_deploy_node: []

## REVERSE PROXY (REMOTE HOST ONLY)

# Openstack services to forward reverse proxy to
# 80 and 443 Are added automaticaly
# Go to http(s)://floating-ip-of-your-remote to access Horizon UI
reverse_proxy_vip_ports_openstack: []

# Non-openstack services, that normally should not be accessible from outside
# Format:
# - ip: ...
#   port: ...
#   ssl: ... (no default value you must specify true/false)
reverse_proxy_additional_servers: []


## ALL-IN-ONE SETUP
# WARNING! delete this section if your setup is multinode
# Whether this setup is for all-in-one deployment
# keep `true` for aio
is_aio: false
# Name of the node
# node_name: "openstack-aio"
# # Recommended resources for the node
# ram_size: 10000
# use max available cpus
# cpu_count: 12
# disk_size: 50


## MULTINODE SETUP
# WARNING! delete this section if your setup is multinode
# Uncomment for multinode setup
# is_aio: false
# Default number of CPU allocated to each node
# it's recommended to allocate max CPUs
default_cpu: 2
# Default RAM for each node
# Minimal 1GB RAM to boot the image
default_ram: 1024
# Default RAM for each node
# Minimal 25GB to boot the image
default_disksize: 25

# # Node configuration
# each node can be of different type
#   control: for openstack control plane components
#   network: for openstack networking services
#   compute: openstack compute host
#   storage: for storage services
#   monitoring: for monitoring services
#   deployment: for running kolla-ansible itself, not part of openstack
# You need exactly one deployment and at least one workload (everything else) node
# You have to have the deploy node separated from everything else
# unless you deploy in aio mode, in which case use different config
# file (TODO)
# You can edit ram_size disk_size and cpu_count for each node

# 4+1 node example (3 compute nodes, one control node, one deployment node)
# You can add more if you wish, or create dedicated network nodes for example
nodes:
  - name: "openstack-control-01"
    control: true
    storage: true
    monitoring: false
    network: true
    compute: false
    ram_size: 8192
    cpu_count: 4

  - name: "openstack-deployment"
    deployment: true
    ram_size: 2048

  - name: "openstack-compute-01"
    compute: true
    ram_size: 4096
    cpu_count: 4

  - name: "openstack-compute-02"
    compute: true
    ram_size: 4096
    cpu_count: 4

  - name: "openstack-compute-03"
    compute: true
    ram_size: 4096
    cpu_count: 4
